"""fix

Revision ID: 21113cce3591
Revises: d3578af0e813
Create Date: 2016-02-11 13:05:59.005496

"""

# revision identifiers, used by Alembic.
revision = '21113cce3591'
down_revision = 'd3578af0e813'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('route')
    op.drop_table('admin_report')
    op.drop_table('User_timeline')
    op.drop_table('User_follow')
    op.drop_table('event')
    op.add_column('user', sa.Column('phone', sa.VARCHAR(length=32), nullable=True))
    op.drop_column('user', 'account')
    op.drop_column('user', 'account_type')
    op.add_column('user_addr', sa.Column('uid', sa.INTEGER(), nullable=True))
    op.drop_constraint(u'user_addr_id_fkey', 'user_addr', type_='foreignkey')
    op.add_column('user_info', sa.Column('birth', sa.DATE(), nullable=True))
    op.add_column('user_info', sa.Column('height', sa.SMALLINT(), nullable=True))
    op.add_column('user_info', sa.Column('nickname', sa.VARCHAR(length=32), nullable=True))
    op.add_column('user_info', sa.Column('register_time', postgresql.TIMESTAMP(), nullable=True))
    op.add_column('user_info', sa.Column('uid', sa.INTEGER(), nullable=True))
    op.add_column('user_info', sa.Column('weight', sa.SMALLINT(), nullable=True))
    op.drop_constraint(u'user_info_id_fkey', 'user_info', type_='foreignkey')
    op.drop_column('user_info', 'create_time')
    op.add_column('user_statistic', sa.Column('follow_num', sa.SMALLINT(), nullable=True))
    op.add_column('user_statistic', sa.Column('follower_num', sa.SMALLINT(), nullable=True))
    op.add_column('user_statistic', sa.Column('route_num', sa.SMALLINT(), nullable=True))
    op.add_column('user_statistic', sa.Column('star_num', sa.SMALLINT(), nullable=True))
    op.add_column('user_statistic', sa.Column('uid', sa.INTEGER(), nullable=True))
    op.drop_constraint(u'user_statistic_id_fkey', 'user_statistic', type_='foreignkey')
    op.drop_column('user_statistic', 'follow')
    op.drop_column('user_statistic', 'route')
    op.drop_column('user_statistic', 'star')
    op.drop_column('user_statistic', 'follower')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_statistic', sa.Column('follower', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('user_statistic', sa.Column('star', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('user_statistic', sa.Column('route', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.add_column('user_statistic', sa.Column('follow', sa.SMALLINT(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'user_statistic_id_fkey', 'user_statistic', 'user', ['id'], ['id'])
    op.drop_column('user_statistic', 'uid')
    op.drop_column('user_statistic', 'star_num')
    op.drop_column('user_statistic', 'route_num')
    op.drop_column('user_statistic', 'follower_num')
    op.drop_column('user_statistic', 'follow_num')
    op.add_column('user_info', sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key(u'user_info_id_fkey', 'user_info', 'user', ['id'], ['id'])
    op.drop_column('user_info', 'weight')
    op.drop_column('user_info', 'uid')
    op.drop_column('user_info', 'register_time')
    op.drop_column('user_info', 'nickname')
    op.drop_column('user_info', 'height')
    op.drop_column('user_info', 'birth')
    op.create_foreign_key(u'user_addr_id_fkey', 'user_addr', 'user', ['id'], ['id'])
    op.drop_column('user_addr', 'uid')
    op.add_column('user', sa.Column('account_type', sa.CHAR(length=5), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('account', sa.VARCHAR(length=32), autoincrement=False, nullable=True))
    op.drop_column('user', 'phone')
    op.create_table('event',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('position', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lng', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pic', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('tape', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'event_pkey')
    )
    op.create_table('User_follow',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u'nextval(\'"User_follow_id_seq"\'::regclass)'), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fid'], [u'user.id'], name=u'User_follow_fid_fkey'),
    sa.ForeignKeyConstraint(['uid'], [u'user.id'], name=u'User_follow_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'User_follow_pkey')
    )
    op.create_table('User_timeline',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u'nextval(\'"User_timeline_id_seq"\'::regclass)'), nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action', sa.CHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fid'], [u'user.id'], name=u'User_timeline_fid_fkey'),
    sa.ForeignKeyConstraint(['uid'], [u'user.id'], name=u'User_timeline_uid_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'User_timeline_pkey')
    )
    op.create_table('admin_report',
    sa.Column('id', postgresql.INET(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'admin_report_pkey')
    )
    op.create_table('route',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('distance', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('avr_speed', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_time', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('weather', postgresql.JSON(), autoincrement=False, nullable=True),
    sa.Column('heat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cover', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('state', sa.CHAR(length=5), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'route_pkey')
    )
    ### end Alembic commands ###
